# -*- coding: utf-8 -*-
"""6.vector_store.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1jcYg065Hbl13_wvC1umXirZvNt-fKEJ3
"""

!pip install langchain langchain-core langchain-community
!pip install openai pypdf tiktoken chromadb

import os
os.environ["OPENAI_API_KEY"] = "{YOUR_API_KEY}"
os.environ["AZURE_OPENAI_ENDPOINT"] = "YOUR_API_ENDPOINT"
os.environ["OPENAI_API_TYPE"] = "{YOUR_API_TYPE}"
os.environ["OPENAI_API_VERSION"] = "{YOUR_API_VERSION}"

from langchain.document_loaders import PyPDFLoader
from langchain.text_splitter import RecursiveCharacterTextSplitter
from langchain.embeddings import AzureOpenAIEmbeddings
from langchain.vectorstores import Chroma
import tiktoken

# PDF 불러오기
loader = PyPDFLoader("/content/[정책브리프 2021-04] 탄소중립 대응을 위한 정부 정책과 동향.pdf")
pages = loader.load_and_split()

# 토큰 단위로 잘라주기 작업을 하기 위해 토크나이저 생성
tokenizer = tiktoken.encoding_for_model("gpt-4o-mini")
def tiktoken_len(text):
  tokens = tokenizer.encode(text)
  return len(tokens)

# 문서를 토큰 단위로 split
text_spliiter = RecursiveCharacterTextSplitter(
    chunk_size = 500,
    chunk_overlap = 20,
    length_function = tiktoken_len,
)

docs = text_spliiter.split_documents(pages)

# 토큰을 embedding 시키는 작업 세팅
embeddings = AzureOpenAIEmbeddings(
    model = "dev-text-embedding-3-small",
    chunk_size = 500
)

# 벡터 값을 저장하는 오픈소스인 Chroma DB
db = Chroma.from_documents(docs,embeddings)

# Chroma DB 값과 비교 (similarity_search)
results = db.similarity_search("탄소 중립이 뭐야?")
print(results[0].page_content)

# Chroma DB 값과 비교 (similarity_search + relevance_score)
results = db.similarity_search_with_relevance_scores("탄소 중립이란?")
for result in results:
  print(result)

from langchain.chat_models import AzureChatOpenAI

llm = AzureChatOpenAI(
    model_name = "dev-gpt-4o-mini",
    temperature = 0.4,
    max_tokens = 500
)

# Chain
from itertools import chain
from langchain.chains import RetrievalQA
qa = RetrievalQA.from_chain_type(
    llm = llm,
    chain_type = "stuff",
    retriever = db.as_retriever()
)

question = "탄소중립 사회란?"
qa(question)
